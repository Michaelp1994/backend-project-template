# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""The user model"""
type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  role: UserRole!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

"""The basic roles a user can have"""
enum UserRole {
  USER
  ADMIN
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

"""User login authentication model"""
type Token {
  id: ID!
  token: String!
  firstName: String!
  lastName: String!
  role: UserRole!
}

"""Input for registering user"""
input RegisterInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  captchaToken: String!
}

"""Input for login credentials"""
input LoginInput {
  email: String!
  password: String!
}

"""Input for sending a password recovery email"""
input ForgotPasswordInput {
  email: String!
  captchaToken: String!
}

"""Input for Resetting password"""
input ResetPasswordInput {
  id: Float!
  newPassword: String!
  emailToken: String!
}

"""Input for updating a user by an admin"""
input UpdateUserInput {
  id: Float!
  password: String
  firstName: String
  lastName: String
  email: String
}

"""Input for updating a profile by the user"""
input UpdateProfileInput {
  password: String
  firstName: String
  lastName: String
  email: String
}

"""Input for updating a users password"""
input UpdatePasswordInput {
  currentPassword: String!
  newPassword: String!
}

"""Input for deleting a user"""
input DeleteUserInput {
  id: ID!
}

"""Input for viewing a user"""
input UserInput {
  id: ID!
}

type Query {
  allUsers: [User!]!
  user(input: UserInput!): User!
  profile: User!
}

type Mutation {
  login(input: LoginInput!): Token!
  forgotPassword(input: ForgotPasswordInput!): Boolean!
  resetPassword(input: ResetPasswordInput!): Boolean!
  register(input: RegisterInput!): Token!
  updateUser(input: UpdateUserInput!): User!
  updateProfile(input: UpdateProfileInput!): User!
  updatePassword(input: UpdatePasswordInput!): User!
  deleteUser(input: DeleteUserInput!): User!
}
